{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"date",
				"datetime\t⟠"
			],
			[
				"to",
				"to_datetime\t⟠"
			],
			[
				"da",
				"date_range(…)\tfunction ⟠"
			],
			[
				"techni",
				"technical_analysis"
			],
			[
				"file",
				"filename"
			],
			[
				"impo",
				"import logging\t★ ⟠"
			],
			[
				"o",
				"obj)\tsnippet ⟠"
			],
			[
				"weig",
				"weight_temp"
			],
			[
				"combin",
				"combined_bool"
			],
			[
				"defaul",
				"default_weights"
			],
			[
				"combined",
				"combined_weights"
			],
			[
				"price",
				"price_simulation"
			],
			[
				"indica",
				"indicators_selected"
			],
			[
				"indi",
				"indicators_selected"
			],
			[
				"signa",
				"signals_stats"
			],
			[
				"input",
				"input_price"
			],
			[
				"telegra",
				"telegram_groups"
			],
			[
				"token",
				"tokenmetrics"
			],
			[
				"twitt",
				"twitter_sentiment"
			],
			[
				"coin",
				"coin_symbol"
			],
			[
				"name",
				"name_of_coin"
			],
			[
				"exp",
				"expected_return"
			],
			[
				"drop",
				"drop_text"
			],
			[
				"high",
				"high_risk"
			],
			[
				"pri",
				"price_simulation"
			],
			[
				"confi",
				"config_file"
			],
			[
				"plot",
				"plot_trends_mama"
			],
			[
				"get",
				"get_price_data"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"__",
				"__name__"
			],
			[
				"config",
				"config_file"
			],
			[
				"quant",
				"quant_metrics"
			],
			[
				"quan",
				"quant_metrics\tfunction"
			],
			[
				"qua",
				"quant_metrics\tfunction"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"doc",
				"AutoDocstring: Current"
			],
			[
				"package remo",
				"Package Control: Remove Package"
			],
			[
				"iport",
				"Import Helper: Insert import"
			],
			[
				"import",
				"Import Helper: List imports"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"dic",
				"AutoDocstring: Current"
			],
			[
				"doct",
				"AutoDocstring: Current"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"rever",
				"Permute Lines: Reverse"
			],
			[
				"upper c",
				"Convert Case: Upper Case"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"pack remo",
				"Package Control: Remove Package"
			],
			[
				"pack re",
				"Package Control: Remove Channel"
			],
			[
				"pack li",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"lint",
				"SublimeLinter: Show All Errors"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Install Package Control",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"which python3",
			"wd"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/paul/Documents/Algorithmic Trading"
	],
	"file_history":
	[
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/technicalanalysis.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/app/technical_app.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/README.md",
		"/Users/paul/Library/Mobile Documents/com~apple~CloudDocs/1 Personal/2 Finances/1 Bank/coinbasepro.json",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/main_v2.py",
		"/Users/paul/Desktop/volatility.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/Indicators Notebooks/TechnicalAnalysis.ipynb",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/api_v2.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade_v2/quant_grade_v2_historical.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade_v2/quant_grade_v2.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/indicators_grade_historical.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/indicators_grade.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/technical_app.py",
		"/Users/paul/Desktop/untitled.py",
		"/Users/paul/Desktop/untitled",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/Technology/technology_roi.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/Fundamental/fundamental_roi.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade/quant_final_grade.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/technical_7days.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/correlation.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/main.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade/quant_grade_1day.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/telegram.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade/quant_grade.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/indicator_scores.csv",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/technical.py",
		"/var/folders/vp/yytpj4c96sj9y6j42nrv6kkr0000gn/T/kite_tutorial.py",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/User/KiteSublime.sublime-settings",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/KiteSublime/KiteSublime.sublime-settings",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/technicalanalysis_api.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/frama.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/twitter.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/templates/simulation.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/reddit.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Downloader/Twitter_API_downloader.ipynb",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/readme.md",
		"/Users/paul/Desktop/requirements.txt",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/requirements.txt",
		"/Users/paul/Desktop/nohup.out",
		"/Users/paul/Desktop/nohup-10-03-2021.out",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/quant_data.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/correlation_market_cap.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/templates/geneticalgorithm.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/socialscraping.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/sentimentanalysis.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/trader_grade/trader_1day.py",
		"/Users/paul/Desktop/trader_1day.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_metrics/quantmetrics_download.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Downloader/pauldoan.session",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Downloader/pauldoan.session-journal",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/socialscraping_v2.py",
		"/Users/paul/Desktop/reddit_telegram_logs.txt",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/telegram_reddit.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/sentiment_download.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/sentiment_api.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/api.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_metrics/quantmetrics.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/trader_grade/trader_7day.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/trader_grade/trader_30day.py",
		"/Users/paul/Desktop/trader_1day.json",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Archives/Scraping/getoldtweets.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/sentimentpreprocessing.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/scam_keywords.txt",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/technical_1day.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade/quant_grade_7days.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade/quant_grade_365days.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade/quant_grade_90days.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/final_grade/final_grade.py",
		"/Users/paul/Documents/pauldoan.github.io/index.html",
		"/Users/paul/Desktop/tokenmetrics.sh",
		"/Users/paul/Desktop/api_v2.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/Combined_CDLS_01.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/Combined_CDLS_01_archive.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/readme.md",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/final_grade/quantstats/reports.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/quantstats/reports.py",
		"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/quantstats/reports.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/quant_data_v2.py",
		"/Users/paul/Downloads/Anaconda3-2019.10-Linux-x86_64.sh",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/black_litterman/Black-Litterman Notebook.ipynb",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Code/Tools/sentiment_api.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_metrics/quantmetrics_api.py",
		"/Users/paul/Desktop/main.py",
		"/Users/paul/Desktop/trader_30day.py",
		"/Users/paul/Desktop/trader_7day.py",
		"/Users/paul/Desktop/trader_7day.json",
		"/Users/paul/Desktop/technical.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/quanstats.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/Sentiment_analysis/readme.md",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/my_flask_app/sentiment_data.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/.gitignore",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/templates/readme.md",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/Execution Strategies/es.gitkeep",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Code/Tools/sentimentanalysis.py",
		"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyltr/models/lambdamart.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/technical_analysis/Indicator_API/api.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Code/Archives/GA/sentimentanalysis_withGA.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Code/Archives/GA/Sentiment_GA.ipynb",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/sentiment_analysis/Code/Archives/GA/sentimentga.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_metrics/quantmetrics_api2.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_metrics/quant_metrics_api.py",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/User/Python3.sublime-build",
		"/Users/paul/Desktop/api.py",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_metrics/quant_metrics.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_metrics/quants_eth.csv",
		"/Users/paul/Desktop/test.py",
		"/Users/paul/Documents/Token Metrics/tokenmetrics-ml/quant_grade_v2/quant_binary_classifier_daily.ipynb",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/Color Highlighter/ColorHighlighter.sublime-settings",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/User/AutoDocstring.sublime-settings",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/AutoDocstring/AutoDocstring.sublime-settings",
		"/Users/paul/Library/Application Support/Sublime Text 3/Packages/Anaconda/README.md"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"suppress_stdout_stderr",
			"/User",
			"get_price_data",
			"/User",
			"tqdm",
			"/User",
			"predictions",
			"predictions_logs",
			"quantstats_performance_data",
			"tech_scorecard_answers",
			"tech_scorecard_categories",
			"tech_scorecard_options",
			"tech_scorecard_questions",
			"telegram",
			"technical_analysis_final_indicator_thresholds",
			"ico_trading_indicators",
			"df",
			"ico_ml_grade_history",
			"trader_1day",
			"df",
			"d6",
			"d5",
			"d2",
			"d3",
			"pd.read_s",
			"d1",
			"candlestick",
			"d3",
			"d2",
			"d1",
			"pd.read_sq",
			"d2",
			"pd.read_sql",
			"d2",
			"d1",
			"d3",
			"d2",
			"pd.read_sq",
			"pd.read",
			"quant",
			"03-07",
			"mama",
			"frama",
			"mama",
			"cci",
			"rsi",
			"ris",
			"roc",
			"bop",
			"`=`=",
			"df = df.iloc[len(df) - days:]",
			"if days >= len(df):\n    df = df.iloc[len(df) - days:]\nelse",
			"~=~=",
			"if days is not None:",
			"~=~=~=~=",
			"if days is not None:",
			"correl",
			"Users",
			"Users/",
			"prices",
			"ResolveUsernameRequest",
			"telegram_group_name",
			"frama",
			"progress_apply",
			"progress",
			"progre",
			"tqdm",
			"return",
			"telegram_url",
			"clt",
			"import os",
			"os",
			"Users",
			"frama",
			"price",
			"df",
			"Price",
			"InputPrice",
			"Length",
			"fm",
			"Users",
			"get_social_data",
			"twitter",
			"get_price_data",
			"cred.to_dict('records')[1]",
			"cred.to_dict('records')[0]",
			"cred.to_dict('records')",
			"j",
			"J",
			"j",
			"drift",
			"alpha_roi",
			"print",
			"daily_messages",
			"sentiment_data_list",
			"url_only",
			"retweets_threshold",
			"get_trends",
			"qs",
			"metrics",
			"dt",
			"datetime",
			"print",
			"prin",
			"print",
			"),",
			"print",
			"ico_ml_grade_history",
			"Starting ML processes",
			"position",
			"df = df[df.position != '0']",
			"df = df\\[df.position != '0'\\]",
			"df = df[df.position != '0']",
			"get_prediction_grade",
			"genera",
			"trader",
			"date",
			"quant",
			"index_sta",
			"/Users",
			"pd",
			"df = prices[[",
			"prices['",
			"prices =",
			"prices.close.values",
			"close.values)",
			"apply",
			"~~~~"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"    ",
			"if days >= len(df):\n`=`=`=`=`=`=pass\n`=`=`=`=else:\n`=`=`=`=`=`=df = df.iloc[len(df) - days:]",
			"if days >= len(df):\n`=`=`=`=pass\n`=`=else:\n`=`=df = df.iloc[len(df) - days:]",
			"if days >= len(df):\n    pass\nelse:\n    df = df.iloc[len(df) - days:]",
			"    ",
			"if days >= len(df):\n~=~=~=~=days = None\n\n~=~=if days is not None:",
			"if days >= len(df):\n~=~=~=~=~=~=days = None\n\n~=~=if days is not None:",
			"if days >= len(df):\n~=~=~=~=~=~=days = None\n\n~=~=~=~=if days is not None:",
			"if days >= len(df):\n~=~=~=~=days = None\n\n~=~=~=~=if days is not None:",
			"        ",
			"if days >= len(df):\n~=~=~=~=days = None\n\n~=~=~=~=if days is not None:",
			"if days >= len(df):\n~=~=days = None\n\n~=~=if days is not None:",
			"if days >= len(df):\n    days = None\n\nif days is not None:",
			"apply",
			"price",
			"input_price",
			"telegram",
			"df = df.drop(df.index[0])",
			"df = df[df.trend != 0]",
			"_pd",
			"df = df[[",
			"df['",
			"df =",
			"df = ",
			"close.values)\n    prices = prices.copy()",
			"close.values)\nprices = prices.copy()",
			"    ",
			"if days:\n~~~~~~~~return df.iloc[len(df)-days:]\n~~~~return df",
			"if days:\n~~~~return df.iloc[len(df)-days:]\n~~~~return df",
			"if days:\n''''return df.iloc[len(df)-days:]\nreturn df",
			"if days:\n    return df.iloc[len(df)-days:]\nreturn df",
			"if days:\\n",
			"days=None)",
			"",
			"\\n",
			"",
			"return.+",
			"\\n",
			"",
			"df['signal']",
			"",
			"return df.iloc[len(df)-days:]",
			"",
			"df['signal']",
			"",
			"prices[['ico_id', 'ico_symbol', 'date', 'close',",
			"df",
			"prices_1.iloc[len(prices_1)-days:]",
			"days:",
			"days)",
			"prices",
			"/home/tokenmetrics/credentials.txt",
			"ico",
			"_pd",
			"_np",
			"num_sim",
			"periods",
			"volatility",
			"expected_return",
			"'ico_id': prices.ico_id.values, 'symbol': prices.ico_symbol.values, 'date': prices.date.values",
			"df = df.iloc[len(df) - days:]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 67.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 229.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Python3.sublime-build",
	"project": "Algo_trading.sublime-project",
	"replace":
	{
		"height": 114.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"techni",
				"technical_analysis/app/technical_app.py"
			],
			[
				"tech",
				"technical_analysis/app/technical_app.py"
			],
			[
				"main",
				"my_flask_app/main_v2.py"
			],
			[
				"technicalan",
				"technical_analysis/technicalanalysis.py"
			],
			[
				"api",
				"my_flask_app/api_v2.py"
			],
			[
				"quant_grade_v2_hi",
				"quant_grade_v2/quant_grade_v2_historical.py"
			],
			[
				"quant",
				"quant_grade_v2/quant_grade_v2.py"
			],
			[
				"quant_gra",
				"quant_grade_v2/quant_grade_v2.py"
			],
			[
				"indi",
				"technical_analysis/indicators_grade.py"
			],
			[
				"technical",
				"technical_analysis/indicators_grade_historical.py"
			],
			[
				"indica",
				"technical_analysis/indicators_grade.py"
			],
			[
				"corre",
				"my_flask_app/correlation.py"
			],
			[
				"technica",
				"technical_analysis/technical_app.py"
			],
			[
				"tele",
				"sentiment_analysis/telegram.py"
			],
			[
				"frama",
				"technical_analysis/frama.py"
			],
			[
				"twi",
				"sentiment_analysis/twitter.py"
			],
			[
				"twitter",
				"sentiment_analysis/twitter.py"
			],
			[
				"apid",
				"sentiment_analysis/Downloader/Twitter_API_downloader.ipynb"
			],
			[
				"reddi",
				"sentiment_analysis/reddit.py"
			],
			[
				"telegra",
				"sentiment_analysis/telegram.py"
			],
			[
				"technical_a",
				"technical_analysis/technical_app.py"
			],
			[
				"techn",
				"technical_analysis/technicalanalysis.py"
			],
			[
				"quan",
				"quant_grade/quant_grade.py"
			],
			[
				"corr",
				"my_flask_app/correlation.py"
			],
			[
				"cor",
				"my_flask_app/correlation.py"
			],
			[
				"gene",
				"templates/geneticalgorithm.py"
			],
			[
				"tqdm",
				"quant_metrics/quantmetrics_download.py"
			],
			[
				"api_",
				"my_flask_app/api_v2.py"
			],
			[
				"black",
				"black_litterman/Black-Litterman Notebook.ipynb"
			],
			[
				"",
				"technical_analysis/technicalanalysis_api.py"
			],
			[
				"tec",
				"technical_analysis/technicalanalysis.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 311.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
